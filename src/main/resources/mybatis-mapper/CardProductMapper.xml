<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="kr.or.kosa.nux2.domain.cardproduct.mapper.CardProductMapper">

    <resultMap id="categoryListResult" type="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$BenefitCategoryDetails">
         <!-- property는 도메인 클래스의 멤버변수명과 일치, column은 테이블의 컬럼명과 일치 -->
        <result property="benefitName" column="benefit_name"/>
        <collection property="benefitDetailsList" column="card_benefit_details" javaType="java.util.ArrayList" resultMap="benefitDetailsResult">

        </collection>
    </resultMap>
    <resultMap id="benefitDetailsResult" type="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$BenefitDetails">
        <!-- property는 도메인 클래스의 멤버변수명과 일치, column은 테이블의 컬럼명과 일치 -->
        <result property="benefitDetails" column="benefit_details"/>

    </resultMap>

    <resultMap id="cardListResult" type="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$DetailsResponse">
        <result property="cardProductId" column="card_product_id"/> <!-- property는 도메인 클래스의 멤버변수명과 일치, column은 테이블의 컬럼명과 일치 -->
        <result property="cardCompanyId" column="card_company_id"/>
        <result property="cardName" column="card_product_name"/>
        <result property="cardImageFileName" column="card_product_image"/>
        <result property="membershipFee" column="membership_fee"/>
        <result property="benefitSummary" column="benefit_summary"/>
        <result property="baseRecord" column="base_record"/>
        <result property="likeCount" column="likeCount"/>
        <result property="isUserClickLike" column="isUserClickLike"/>
        <collection property="benefitCategoryList" column="benefit_code_id" javaType="java.util.ArrayList" resultMap="categoryListResult">

        </collection>
    </resultMap>
    <select id="findCardProductDetail" parameterType="map" resultMap="cardListResult">
        select
            cp.card_product_id as card_product_id,
            cp.card_company_id as card_company_id,
            cp.card_product_name as card_product_name,
            cp.card_product_image as card_product_image,
            cp.membership_fee as membership_fee,
            cp.benefit_summary as benefit_summary,
            cbc.benefit_name as benefit_name,
            cbd.benefit_details as benefit_details,
            cpd.base_record as base_record,
            (select count(*) from member_like_card where member_id = #{memberId} and card_product_id = #{cardProductId}) as isUserClickLike,
            (select count(member_id) from member_like_card where card_product_id = #{cardProductId}) as likeCount
        from
            card_product cp
            join
            card_benefit_code cbc
            on cp.card_product_id = cbc.card_product_id
            join
            card_benefit_details cbd
            on cbd.card_id = cbc.card_product_id
            join
            card_product_details cpd
            on cp.card_product_id = cpd.card_product_id
        where cp.card_product_id = #{cardProductId}
    </select>

    <select id="findBenefitDetails" parameterType="map" resultType="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$BenefitDetails">
        select benefit_details
        from card_benefit_details  as benefitDetails
    </select>

    <resultMap id="cardListResultSumm" type="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$Response">
        <result property="cardProductId" column="card_product_id"/> <!-- property는 도메인 클래스의 멤버변수명과 일치, column은 테이블의 컬럼명과 일치 -->
        <result property="cardCompanyId" column="card_company_id"/>
        <result property="cardName" column="card_product_name"/>
        <result property="cardImageFileName" column="card_product_image"/>
        <result property="membershipFee" column="membership_fee"/>
        <result property="benefitSummary" column="benefit_summary"/>
        <result property="likeCount" column="likeCount"/>
        <collection property="benefitCategoryList" column="benefit_code_id"  resultMap="categoryListResultSumm">

        </collection>
    </resultMap>
    <resultMap id="categoryListResultSumm" type="kr.or.kosa.nux2.domain.cardproduct.dto.CardProductDto$BenefitCategory">
        <!-- property는 도메인 클래스의 멤버변수명과 일치, column은 테이블의 컬럼명과 일치 -->
        <result property="benefitName" column="benefit_name"/>
    </resultMap>
    <select id="findAllCardProducts" parameterType="map" resultMap="cardListResultSumm">
        <choose>
            <when test="keyword != null">
                SELECT
                cp.card_product_id,
                cp.card_company_id,
                cp.card_product_name,
                cp.card_product_image,
                cp.membership_fee,
                cp.benefit_summary,
                cbc.benefit_code_id,
                cbc.benefit_name,
                (SELECT COUNT(member_id) FROM member_like_card) AS likeCount
                FROM
                (
                SELECT * FROM
                (
                SELECT
                card_product_id AS card_product_id,
                card_company_id AS card_company_id,
                card_product_name AS card_product_name,
                card_product_image AS card_product_image,
                membership_fee AS membership_fee,
                benefit_summary AS benefit_summary,
                row_number() OVER(ORDER BY card_product_id) AS row_num
                FROM card_product
                WHERE
                card_company_id LIKE '%' || #{keyword} || '%'
                OR
                card_product_name LIKE '%' || #{keyword} || '%'
                OR
                card_product_id in (select card_product_id from card_benefit_code where benefit_name LIKE '%' || #{keyword} || '%')
                )a  where row_num between #{startnum} and #{endnum}
                ) cp
                left join
                card_benefit_code cbc
                on cp.card_product_id = cbc.card_product_id
                <choose>
                    <when test="cardProductId != null">
                        where cp.card_product_id in
                        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                </choose>
                ORDER BY
                cp.card_product_id
            </when>
            <otherwise>
                select
                cp.card_product_id,
                cp.card_company_id,
                cp.card_product_name,
                cp.card_product_image,
                cp.membership_fee,
                cp.benefit_summary,
                cbc.benefit_code_id,
                cbc.benefit_name,
                (select count(member_id) from member_like_card) as likeCount
                from
                (
                select * from
                (select
                card_product_id,
                card_company_id,
                card_product_name,
                card_product_image,
                membership_fee,
                benefit_summary,
                row_number() over(order by card_product_id) as row_num
                from card_product
                <choose>
                    <when test="list != null">
                        where card_product_id in
                        <foreach item="item" index="index" collection="
                        list" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                </choose>
                     ) a where row_num between #{startnum} and #{endnum}
                ) cp
                left join
                card_benefit_code cbc
                on cp.card_product_id = cbc.card_product_id
                order by cp.card_product_id

            </otherwise>
        </choose>


    </select>
<!--    "cardCompanyId": null,-->
<!--    "cardName": null,-->
<!--    "cardImageFileName": null,-->
<!--    "membershipFee": null,-->
<!--    "benefitSummary": null,-->
<!--    "likeCount": 1,-->
<!--    "benefitCategoryList": []-->

    <select id="findTop6LikeCardProduct" resultMap="cardListResultSumm">
        SELECT
            subquery.cpi as card_product_id,
            subquery.cci as card_company_id,
            subquery.cpn as card_product_name,
            subquery.cpim as card_product_image,
            subquery.mf as membership_fee,
            subquery.bs as benefit_summary,
            subquery.bci as benefit_code_id,
            subquery.bn as benefit_name,
            (select count(member_id) from member_like_card where card_product_id = subquery.cpi group by card_product_id) likecount
        FROM (
            SELECT
            cp.card_product_id cpi,
            cp.card_company_id cci,
            cp.card_product_name cpn,
            cp.card_product_image cpim,
            cp.membership_fee mf,
            cp.benefit_summary bs,
            cbc.benefit_code_id bci,
            cbc.benefit_name bn
            FROM
            card_product cp
            RIGHT JOIN
            card_benefit_code cbc ON cp.card_product_id = cbc.card_product_id
            ) subquery
        WHERE
            subquery.cpi IN (
            SELECT card_product_id FROM (
            SELECT card_product_id, count(member_id) FROM member_like_card  GROUP BY card_product_id order by count(member_id) desc
            ) likes where  <![CDATA[rownum < 7]]> )
        order by likecount desc

    </select>


    <select id="findMemberLikeCardProduct" parameterType="String" resultMap="cardListResultSumm">
<!--        select-->
<!--            cp.card_product_id,-->
<!--            cp.card_company_id,-->
<!--            cp.card_product_name,-->
<!--            cp.card_product_image,-->
<!--            cp.membership_fee,-->
<!--            cp.benefit_summary,-->
<!--            //benefit_code_id,-->
<!--            (select count(member_id) from member_like_card) as likeCount-->
<!--        from-->
<!--            card_product cp-->
<!--        join-->
<!--            member_like_card mlc-->
<!--        on cp.card_product_id = mlc.card_product_id-->
<!--        where mlc.member_id = #{memberId}-->
        select
            cp.card_product_id,
            cp.card_company_id,
            cp.card_product_name,
            cp.card_product_image,
            cp.membership_fee,
            cp.benefit_summary,
            cbc.benefit_code_id,
            cbc.benefit_name,
            (select count(member_id) from member_like_card) as likeCount
        from
        (
            select * from
            (select
            card_product_id,
            card_company_id,
            card_product_name,
            card_product_image,
            membership_fee,
            benefit_summary
            from card_product
            where card_product_id in (select card_product_id from member_like_card where member_id = #{memberId})
            ) s
        ) cp
        left join
        card_benefit_code cbc
        on cp.card_product_id = cbc.card_product_id
        order by cp.card_product_id
    </select>

    <insert id="insertMemberLikeCardProduct" parameterType="map">
        insert into member_like_card(card_product_id, member_id) values(#{cardProductId}, #{memberId})
    </insert>

    <delete id="deleteMemberLikeCardProduct" parameterType="map">
        delete from member_like_card where member_id = #{memberId} and card_product_id = #{cardProductId}
    </delete>
</mapper>